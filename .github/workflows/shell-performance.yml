name: Shell Startup Performance

on:
  pull_request:
    paths:
      - 'shared/.config/shell/**'
      - 'shared/.config/fish/**'
      - 'shared/.profile'
      - 'shared/.zshrc'
      - 'shared/.zshenv'
      - 'shared/.zprofile'
      - 'shared/.bashrc'
      - 'shared/.bash_profile'
      - 'personal/.config/shell/**'
      - 'personal/.config/fish/**'
      - 'work/.config/shell/**'
      - 'work/.config/fish/**'
      - 'ubuntu-server/.config/shell/**'
      - 'ubuntu-server/.config/fish/**'

permissions:
  contents: read
  pull-requests: write

jobs:
  ubuntu-performance:
    runs-on: ubuntu-latest
    env:
      OS_NAME: Ubuntu
      PROFILES: shared ubuntu-server
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y bash zsh fish stow bc time curl unzip jq

      - name: Install shell startup tools
        run: |
          chmod +x .github/scripts/install-startup-tools.sh
          .github/scripts/install-startup-tools.sh

      - name: Install PR dotfiles
        run: |
          rm -f "$HOME/.bash_profile" "$HOME/.bashrc" "$HOME/.profile"
          stow -v --target="$HOME" ${{ env.PROFILES }}

      - name: Create test .env file
        run: |
          chmod +x .github/scripts/create-test-env.sh
          .github/scripts/create-test-env.sh

      - name: Measure PR startup times
        run: |
          chmod +x .github/scripts/measure-shell-startup.sh
          .github/scripts/measure-shell-startup.sh 20 pr-times.json
          cat pr-times.json

      - name: Save PR results
        run: cp pr-times.json /tmp/pr-times.json

      - name: Uninstall PR dotfiles
        run: stow -v --target="$HOME" -D ${{ env.PROFILES }}

      - name: Checkout base branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.base_ref }}

      - name: Install base dotfiles
        run: |
          rm -f "$HOME/.bash_profile" "$HOME/.bashrc" "$HOME/.profile"
          stow -v --target="$HOME" ${{ env.PROFILES }}

      - name: Create test .env file
        run: .github/scripts/create-test-env.sh

      - name: Measure base startup times
        run: |
          .github/scripts/measure-shell-startup.sh 20 base-times.json
          cat base-times.json

      - name: Generate performance report
        run: |
          chmod +x .github/scripts/generate-performance-report.sh
          .github/scripts/generate-performance-report.sh \
            "${{ env.OS_NAME }}" \
            "${{ env.PROFILES }}" \
            /tmp/pr-times.json \
            base-times.json \
            comment.md
          cat comment.md

      - name: Post comment to PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const comment = fs.readFileSync('comment.md', 'utf8');
            const osName = process.env.OS_NAME;

            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes(`Shell Startup Performance Report (${osName})`)
            );

            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: comment
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: comment
              });
            }

  macos-performance:
    runs-on: macos-14
    env:
      OS_NAME: macOS
      PROFILES: shared personal
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4

      - name: Install dependencies
        run: brew install stow bc jq

      - name: Install shell startup tools
        run: |
          chmod +x .github/scripts/install-startup-tools.sh
          .github/scripts/install-startup-tools.sh

      - name: Install PR dotfiles
        run: |
          rm -f "$HOME/.bash_profile" "$HOME/.bashrc" "$HOME/.profile"
          stow -v --target="$HOME" ${{ env.PROFILES }}

      - name: Create test .env file
        run: |
          chmod +x .github/scripts/create-test-env.sh
          .github/scripts/create-test-env.sh

      - name: Measure PR startup times
        run: |
          chmod +x .github/scripts/measure-shell-startup.sh
          .github/scripts/measure-shell-startup.sh 20 pr-times.json
          cat pr-times.json

      - name: Save PR results
        run: cp pr-times.json /tmp/pr-times.json

      - name: Uninstall PR dotfiles
        run: stow -v --target="$HOME" -D ${{ env.PROFILES }}

      - name: Checkout base branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.base_ref }}

      - name: Install base dotfiles
        run: |
          rm -f "$HOME/.bash_profile" "$HOME/.bashrc" "$HOME/.profile"
          stow -v --target="$HOME" ${{ env.PROFILES }}

      - name: Create test .env file
        run: .github/scripts/create-test-env.sh

      - name: Measure base startup times
        run: |
          .github/scripts/measure-shell-startup.sh 20 base-times.json
          cat base-times.json

      - name: Generate performance report
        run: |
          chmod +x .github/scripts/generate-performance-report.sh
          .github/scripts/generate-performance-report.sh \
            "${{ env.OS_NAME }}" \
            "${{ env.PROFILES }}" \
            /tmp/pr-times.json \
            base-times.json \
            comment.md
          cat comment.md

      - name: Post comment to PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const comment = fs.readFileSync('comment.md', 'utf8');
            const osName = process.env.OS_NAME;

            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes(`Shell Startup Performance Report (${osName})`)
            );

            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: comment
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: comment
              });
            }
